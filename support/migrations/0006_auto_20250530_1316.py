# Generated by Django 5.1.4 on 2025-05-30 07:16

from django.db import migrations
from django.utils import timezone


def create_missing_ticket_read_status(apps, schema_editor):
    """
    Create TicketReadStatus entries for all existing tickets that don't have them.
    This fixes tickets created by admin before the signal was implemented.
    """
    SupportTicket = apps.get_model('support', 'SupportTicket')
    TicketReadStatus = apps.get_model('support', 'TicketReadStatus')
    
    for ticket in SupportTicket.objects.all():
        # Check if this ticket already has a read status for its user
        if not TicketReadStatus.objects.filter(ticket=ticket, user=ticket.user).exists():
            # Create a read status with timestamp slightly before ticket creation
            # This ensures the ticket appears as "unread" initially
            TicketReadStatus.objects.create(
                ticket=ticket,
                user=ticket.user,
                last_read_at=ticket.created_at - timezone.timedelta(seconds=1)
            )


def reverse_create_missing_ticket_read_status(apps, schema_editor):
    """
    Reverse migration - we won't delete the read statuses as they might be legitimate
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('support', '0005_auto_20250530_1315'),
    ]

    operations = [
        migrations.RunPython(
            create_missing_ticket_read_status,
            reverse_create_missing_ticket_read_status
        ),
    ]
