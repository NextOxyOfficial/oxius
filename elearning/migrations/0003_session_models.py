# Generated by manual creation for session tracking models

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('elearning', '0002_alter_batch_id_alter_division_id_alter_subject_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ELearningSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(help_text='Browser session key', max_length=40)),
                ('device_fingerprint', models.CharField(help_text='Device identifier', max_length=128)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('terminated', 'Terminated'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('page_url', models.URLField(help_text='E-learning page URL')),
                ('subject_id', models.CharField(blank=True, max_length=20, null=True)),
                ('current_video_id', models.CharField(blank=True, max_length=20, null=True)),
                ('total_viewing_time', models.PositiveIntegerField(default=0, help_text='Total seconds viewed')),
                ('session_viewing_time', models.PositiveIntegerField(default=0, help_text='Seconds viewed in this session')),
                ('is_pro_user', models.BooleanField(default=False)),
                ('subscription_valid_until', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elearning_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'E-Learning Session',
                'verbose_name_plural': 'E-Learning Sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_fingerprint', models.CharField(max_length=128, unique=True)),
                ('device_name', models.CharField(blank=True, max_length=100)),
                ('browser_info', models.TextField()),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_trusted', models.BooleanField(default=False)),
                ('active_sessions_count', models.PositiveIntegerField(default=0)),
                ('max_allowed_sessions', models.PositiveIntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device Session',
                'verbose_name_plural': 'Device Sessions',
                'ordering': ['-last_seen'],
            },
        ),
        migrations.CreateModel(
            name='SuspiciousActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('multiple_devices', 'Multiple Devices'), ('rapid_switching', 'Rapid Account Switching'), ('unusual_access_pattern', 'Unusual Access Pattern'), ('concurrent_sessions', 'Concurrent Sessions'), ('account_sharing', 'Potential Account Sharing'), ('automation_detected', 'Automation Detected')], max_length=30)),
                ('description', models.TextField()),
                ('evidence', models.JSONField(default=dict)),
                ('severity', models.PositiveIntegerField(default=1, help_text='1-10 severity scale')),
                ('ip_addresses', models.JSONField(default=list)),
                ('device_fingerprints', models.JSONField(default=list)),
                ('session_ids', models.JSONField(default=list)),
                ('is_resolved', models.BooleanField(default=False)),
                ('action_taken', models.TextField(blank=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suspicious_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suspicious Activity',
                'verbose_name_plural': 'Suspicious Activities',
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('session_start', 'Session Started'), ('page_access', 'Page Accessed'), ('video_start', 'Video Started'), ('video_pause', 'Video Paused'), ('video_resume', 'Video Resumed'), ('video_end', 'Video Ended'), ('session_end', 'Session Ended'), ('concurrent_access_blocked', 'Concurrent Access Blocked'), ('time_limit_reached', 'Time Limit Reached'), ('suspicious_activity', 'Suspicious Activity')], max_length=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='elearning.elearningsession')),
            ],
            options={
                'verbose_name': 'Session Activity Log',
                'verbose_name_plural': 'Session Activity Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='elearningsession',
            index=models.Index(fields=['user', 'status'], name='elearning_e_user_id_b6c71c_idx'),
        ),
        migrations.AddIndex(
            model_name='elearningsession',
            index=models.Index(fields=['device_fingerprint', 'status'], name='elearning_e_device__2e67eb_idx'),
        ),
        migrations.AddIndex(
            model_name='elearningsession',
            index=models.Index(fields=['ip_address', 'status'], name='elearning_e_ip_addr_9c8f31_idx'),
        ),
        migrations.AddIndex(
            model_name='elearningsession',
            index=models.Index(fields=['started_at'], name='elearning_e_started_5ef6ee_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionactivitylog',
            index=models.Index(fields=['session', 'timestamp'], name='elearning_s_session_c61e57_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionactivitylog',
            index=models.Index(fields=['action', 'timestamp'], name='elearning_s_action_db0628_idx'),
        ),
        migrations.AddIndex(
            model_name='devicesession',
            index=models.Index(fields=['device_fingerprint'], name='elearning_d_device__84ceaf_idx'),
        ),
        migrations.AddIndex(
            model_name='devicesession',
            index=models.Index(fields=['user', 'is_trusted'], name='elearning_d_user_id_1e86da_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['user', 'is_resolved'], name='elearning_s_user_id_e85b1f_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['activity_type', 'detected_at'], name='elearning_s_activit_6da9b9_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['severity', 'is_resolved'], name='elearning_s_severit_f2a1e6_idx'),
        ),
    ]
